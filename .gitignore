# .gitignore for Fundraiser App Monorepo
# Structure: root/ (shared), frontend/ (Next.js), backend/ (Django with config/ subfolder)
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal
media/
staticfiles/

# Django-generated migration files (if you prefer to ignore auto-generated ones; usually commit them)
backend/fundraiser/migrations/0*.py

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
backend/.venv
backend/env
backend/ENV
backend/env.bak
backend/venv.bak
backend/venv/

# Backend-specific (Django)
backend/__pycache__/
backend/*.pyc
backend/config/__pycache__/
backend/config/*.pyc
backend/config/db.sqlite3
backend/config/media/
backend/config/staticfiles/
backend/config/.env
backend/config/local_settings.py

# Frontend-specific (Next.js)
frontend/node_modules/
frontend/.next/
frontend/out/
frontend/build/
frontend/.env
frontend/.env.local
frontend/.env.development.local
frontend/.env.test.local
frontend/.env.production.local
frontend/npm-debug.log*
frontend/yarn-debug.log*
frontend/yarn-error.log*

# Shared (Monorepo)
.venv/
env/

.env
.env.local
.env.development.local
.env.test.local
.env.production.local
.gitignore.local
README.md.license

# IDE / Editor
.vscode/
.idea/
*.swp
*.swo
*~
.project
.buildpath
.settings/
.vscode/settings.json
.vscode/tasks.json
.vscode/launch.json
.vscode/extensions.json

# OS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
.nyc_output

# Temporary files
*.tmp
*.temp

# Docker
.dockerignore
Dockerfile.*.local

# Database dumps/backups (if any)
*.dump
*.sql.gz

# Secrets (add any custom secret files)
secrets/
config/secrets.json

# Cargo remnants (if switching from Rust)
Cargo.lock
target/